function checkCashRegister(price, cash, cid) {
// object with money units and their values
let moneyUnits = {
    "PENNY": 0.01,
    "NICKEL": 0.05,
    "DIME": 0.10,
    "QUARTER": 0.25,
    "ONE": 1.00,
    "FIVE": 5.00,
    "TEN": 10.00,
    "TWENTY": 20.00,
    "ONE HUNDRED": 100.00
  }
// total of cash in drawer begins in zero
  let totalCid = 0;
// for every type of units 
  for (let denomination of cid) {
// add 0.05 nickel to total of cash in drawer
    totalCid += denomination[1];
  }
// total of cash in drawer accept only two decimals
  totalCid = totalCid.toFixed(2);totalCid = totalCid.toFixed(2);
  let changeDue = cash - price;
  let change = [];
  if (changeDue > totalCid) {
    return {status: "INSUFFICIENT_FUNDS", change: change};
  } else if (changeDue.toFixed(2) === totalCid) {
    return {status: "CLOSED", change: cid};
  } else {
// to sort in highest to lowest order cash in drawer
    cid = cid.reverse();
    for (let currency of cid) {
      let littleBox = [currency[0], 0];
// while changeDue is greater or equal to the first element of moneyUnits and the second of moneyUnits is more than zero
      while (changeDue >= moneyUnits[currency[0]] && currency[1] > 0) {
// add to the second element of littleBox the first amount of littleBox
        littleBox[1] += moneyUnits[currency[0]];
// subtract to the second element of littleBox the first amount of littleBox
       currency[1] -= moneyUnits[currency[0]];
        changeDue -= moneyUnits[currency[0]];
// changeDue accept only two decimals
        changeDue = changeDue.toFixed(2);
      }
// if the second element in littleBox array is more than zero
      if (littleBox[1] > 0) {
// The contents of the littleBox are added to the change
        change.push(littleBox);
      }
    }
  }
  if (changeDue > 0) {
    return {status: "INSUFFICIENT_FUNDS", change: []};
  }
  else {
  return {status: "OPEN", change: change};
}
}

checkCashRegister(19.5, 20, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]);
